services:

  # reverse proxy
  traefik:
    image: "traefik:v3.1"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--accesslog=true"
      - "--accesslog.filePath=/logs/access.log"
      - "--entrypoints.app.address=:8000"
      - "--entrypoints.dbadmin.address=:4000"
    ports:
      - "8000:8000" # gui 
      - "4000:4000" # dbadmin
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./logs/:/logs/"

  # frontend server
  gui:
    build: 
      context: gui/
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: gui/
        target: /usr/src/gui/
      - /usr/src/gui/node_modules
    depends_on:
      - db
      - images
    labels:
      - traefik.enable=true
      - traefik.http.routers.gui.entrypoints=app
      - traefik.http.routers.gui.rule=PathPrefix(`/`)
      - traefik.http.services.gui.loadbalancer.server.port=3000

  # backend api server
  api:
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/kindbaby
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    build:
      context: api/
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: api/
        target: /usr/src/api/
    depends_on:
      - db
      - images
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.entrypoints=app
      - traefik.http.routers.api.rule=PathPrefix(`/api`)
      - traefik.http.routers.api.middlewares=strip-api-prefix
      - traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api
      - traefik.http.services.api.loadbalancer.server.port=8080

  # images storage service
  images:
    image: hauxir/imgpush:latest
    environment:
      MAX_UPLOADS_PER_DAY: 100
      NUDE_FILTER_MAX_THRESHOLD: 0.60
    volumes:
      - type: bind
        source: ./images
        target: /images
    labels:
      - traefik.enable=true
      - traefik.http.routers.images.entrypoints=app
      - traefik.http.routers.images.rule=PathPrefix(`/api/images`)
      - traefik.http.routers.images.middlewares=strip-api-images-prefix
      - traefik.http.middlewares.strip-api-images-prefix.stripprefix.prefixes=/api/images
      - traefik.http.services.images.loadbalancer.server.port=5000

  # database admin frontend
  dbadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.dbadmin.rule=PathPrefix(`/`)
      - traefik.http.routers.dbadmin.entrypoints=dbadmin
      - traefik.http.services.dbadmin.loadbalancer.server.port=80

  # database
  db:
    image: postgres
    environment:
      POSTGRES_USER: kindbaby
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - type: bind
        source: ./db/
        target: /var/lib/postgresql/
    expose:
      - 5432
